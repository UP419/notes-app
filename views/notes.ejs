<%- include('partials/header'); -%>

<div class="notes-header">
  <h2>Here are notes</h2>
  <button id="myNotesButton">My Notes</button>
  <button id="allNotesButton">Get All Notes</button>
</div>
<div class="add-note-container">
  <input type="text" name="note" required/>
  <button id="newNoteButton"> Add Note</button>
</div>
<ul id="notes-list">
</ul>

<script>
  class NotesApp {
    constructor() {
      this.notesList = document.getElementById('notes-list');
      this.newNoteButton = document.getElementById('newNoteButton');
      this.allNotesButton = document.getElementById('allNotesButton');
      this.myNotesButton = document.getElementById('myNotesButton');
      this.noteInput = document.querySelector('input[name="note"]');

      this.newNoteButton.addEventListener('click', this.addNote.bind(this));
      this.allNotesButton.addEventListener('click', this.getAllNotes.bind(this));
      this.myNotesButton.addEventListener('click', this.getNotesByUser.bind(this));

      this.initialize();
    }

    async initialize() {
      try {
        await this.getNotesByUser();
      } catch (err) {
        console.error('Error fetching notes during initialization:', err);
      }
    }

    async fetchNotes(endpoint) {
      const res = await fetch(endpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      return res.json();
    }

    async addNote() {
      const newNote = this.noteInput.value.trim();
      if (newNote) {
        try {
          await fetch('/addNote', {
            method: 'POST',
            body: JSON.stringify({ note: newNote }),
            headers: {
              'Content-Type': 'application/json'
            }
          });
          this.noteInput.value = '';
          await this.getNotesByUser();
        } catch (err) {
          console.error('Error adding note:', err);
        }
      }
    }

    async getAllNotes() {
      try {
        const data = await this.fetchNotes('/getAllNotes');
        this.renderNotes(data, false); 
      } catch (err) {
        console.error('Error fetching notes:', err);
      }
    }

    async getNotesByUser() {
      try {
        const notes = await this.fetchNotes('/getNotesByUser');
        this.renderNotes(notes);
      } catch (err) {
        console.error('Error fetching notes:', err);
      }
    }

    renderNotes(notes, showDeleteButton = true) {
      this.notesList.innerHTML = '';
      if (notes && notes.length > 0) {
        notes.forEach(note => this.renderNoteItem(note, showDeleteButton));
      } else {
        this.renderEmptyMessage();
      }
    }

    renderNoteItem(note, showDeleteButton = true) {
      const listItem = document.createElement('li');
      listItem.textContent = note.note;

      if (showDeleteButton) {
        const deleteButton = document.createElement('button');
        deleteButton.textContent = 'Delete';
        deleteButton.addEventListener('click', async () => {
          try {
            await this.deleteNoteItem(note._id);
            await this.getNotesByUser();
          } catch (err) {
            console.error('Error deleting note:', err);
          }
        });
        listItem.appendChild(deleteButton);
      }

      this.notesList.appendChild(listItem);
    }

    async deleteNoteItem(id) {
      try {
        await fetch('/deleteNote', {
          method: 'POST',
          body: JSON.stringify({ id }),
          headers: {
            'Content-Type': 'application/json'
          }
        });
      } catch (err) {
        console.error('Error deleting note:', err);
      }
    }

    renderEmptyMessage() {
      const emptyMessage = document.createElement('li');
      emptyMessage.textContent = 'No notes found.';
      this.notesList.appendChild(emptyMessage);
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    new NotesApp();
  });
</script>
